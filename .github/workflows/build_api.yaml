name: Build and Push API

on:
  # TODO: temporary while testing, will be changed to run on pull_request to main
  workflow_dispatch:
  push:
    branches:
      - dev-dynamic-analysis-artifact-scanning
    paths:
      - ParkingSystem/**
      - .github/workflows/build_api.yaml

jobs:
  build-api:
    runs-on: ubuntu-22.04  
    permissions:
      security-events: write
      pull-requests: read
      contents: write
      id-token: write
      statuses: write
      actions: read
      pages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: ./ParkingSystem
          push: false
          load: true
          tags: desofs/parking-system:0.0.1

      - name: Scan built Docker image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        # FIXME: Scanning a random image just to see if a report is generated. Once this is tested change back to ours
        with:
          # image-ref: 'desofs/parking-system:0.0.1'
          image-ref: 'nginx:alpine'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Fail build on High/Criticial Vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          format: table
          image-ref: 'nginx:alpine'
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: 1
          # On a subsequent call to the action we know trivy is already installed so can skip this
          skip-setup-trivy: true