@startuml
skinparam classAttributeIconSize 0

rectangle "User Aggregate" {
  class User {
    -id: UUID
    -username: String
    -email: String
    -password: String
    -phoneNumber: String
    +login()
    +createAccount()
    +cancelAccount()
    +updateInformation()
  }

  class Role {
    -id: UUID
    -name: String <<CLIENTE | PARK_MANAGER | ADMIN>>
  }

  class PaymentDetails {
    -id: UUID
    -type: PaymentMethod
    -details: String
    +changePaymentDetails()
  }

  enum PaymentMethod {
    - MBWay
    - Card
  }

}

rectangle "Vehicle Aggregate" {
  class Vehicle {
    -licensePlate: String
    -brand: String
    -model: String
    -approved: Boolean
    +updateInformation()
  }
}


rectangle "Park Aggregate" {
  class Park {
    -id: UUID
    -name: String
    -location: String
    -capacity: int
    -gateOpen: Boolean
    +openGate()
    +closeGate()
  }

class ParkingSpot {
    -id: UUID
    -number: int
    -available: Boolean
  }
}

rectangle "ParkingRequest Aggregate" {
  class ParkingRequest {
    -id: UUID
    -requestDate: Date
    -requestPeriod: int
    -state: String <<approved|rejected|pending>>
  }
}

' Relações
User "1" -- "1" Role : has >
User "1" -- "0..*" Vehicle : has >
User "1" -- "0..1" PaymentDetails : has >
PaymentDetails "1" -- "1" PaymentMethod : uses >
User "1" -- "0..*" ParkingRequest : submits >
Vehicle "1" -- "0..1" Park : parks in >

ParkingRequest "1" -- "1" Vehicle : relates to >
ParkingRequest "1" -- "1" Park : relates to >

Park "1" -- "0..*" ParkingSpot : has >

User "1" ..> "0..*" Park : manages >
User "1" ..> "0..*" ParkingRequest : approves/rejects >
User "1" ..> "1..*" User : creates >
@enduml
